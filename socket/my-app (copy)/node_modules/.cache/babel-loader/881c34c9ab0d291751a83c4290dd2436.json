{"ast":null,"code":"var _jsxFileName = \"/home/atef/AlSair/atef/ITI/pullpush/socket/my-app (copy)/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { React, useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://127.0.0.1:5002\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState('');\n  const [users, setUsers] = useState([]);\n  const socket = io(ENDPOINT); // solve set interval inside use effect\n\n  useEffect(() => {\n    socket.on(\"messageFromServer\", data => {\n      addResponseMessage(data);\n    });\n    socket.on(\"allUsers\", data => {\n      setUsers(data);\n    });\n    return () => {};\n  }, []);\n\n  const handleNewUserMessage = newMessage => {\n    socket.emit('messageToUser', [newMessage, user]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user\n      }, user, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 31\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Widget, {\n      handleNewUserMessage: handleNewUserMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: user,\n      onChange: e => setUser(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Ytf6fW9hz5QFJu3tg1oCMqJILgo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/atef/AlSair/atef/ITI/pullpush/socket/my-app (copy)/src/App.js"],"names":["React","useState","useEffect","io","Widget","addResponseMessage","ENDPOINT","App","user","setUser","users","setUsers","socket","on","data","handleNewUserMessage","newMessage","emit","map","e","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,MAAT,EAAgBC,kBAAhB,QAA0C,mBAA1C;AACA,OAAO,kCAAP;;;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAiBR,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACS,KAAD,EAASC,QAAT,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMW,MAAM,GAAGT,EAAE,CAACG,QAAD,CAAjB,CAHW,CAKX;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,MAAM,CAACC,EAAP,CAAU,mBAAV,EAA+BC,IAAI,IAAI;AACnCT,MAAAA,kBAAkB,CAACS,IAAD,CAAlB;AACH,KAFD;AAGIF,IAAAA,MAAM,CAACC,EAAP,CAAU,UAAV,EAAsBC,IAAI,IAAI;AAC1BH,MAAAA,QAAQ,CAACG,IAAD,CAAR;AACH,KAFD;AAGA,WAAS,MAAI,CACZ,CADD;AAEH,GATI,EAUL,EAVK,CAAT;;AAYA,QAAMC,oBAAoB,GAAIC,UAAD,IAAgB;AACzCJ,IAAAA,MAAM,CAACK,IAAP,CAAY,eAAZ,EAA4B,CAACD,UAAD,EAAYR,IAAZ,CAA5B;AACH,GAFD;;AAIF,sBACF;AAAA,4BACI;AAAA,gBAEQE,KAAK,CAACQ,GAAN,CAAWV,IAAD,iBAAQ;AAAA,kBAAgBA;AAAhB,SAASA,IAAT;AAAA;AAAA;AAAA;AAAA,cAAlB;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,MAAD;AAAQ,MAAA,oBAAoB,EAAEO;AAA9B;AAAA;AAAA;AAAA;AAAA,YANJ,eAQI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEP,IAA1B;AAAgC,MAAA,QAAQ,EAAGW,CAAD,IAAKV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtD;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADE;AAcD;;GApCQd,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {React, useState, useEffect} from \"react\"\nimport { io } from \"socket.io-client\";\nimport { Widget,addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\n\nconst ENDPOINT = \"http://127.0.0.1:5002\"\nfunction App() {\n    const [user , setUser]=useState('')\n    const [users , setUsers]=useState([])\n    const socket = io(ENDPOINT);\n\n    // solve set interval inside use effect\n    useEffect(() => {\n        socket.on(\"messageFromServer\", data => {\n            addResponseMessage(data)\n        });\n            socket.on(\"allUsers\", data => {\n                setUsers(data)\n            });\n            return ( ()=>{\n            });\n        },\n        []\n    );\n    const handleNewUserMessage = (newMessage) => {\n        socket.emit('messageToUser',[newMessage,user])\n    };\n\n  return (\n<>\n    <ul>\n        {\n            users.map((user)=><li key={user}>{user}</li>)\n        }\n    </ul>\n    <Widget handleNewUserMessage={handleNewUserMessage} />\n\n    <input type=\"text\" value={user} onChange={(e)=>setUser(e.target.value)} />\n\n\n    </>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
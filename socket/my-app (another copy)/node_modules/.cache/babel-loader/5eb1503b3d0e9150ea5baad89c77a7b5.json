{"ast":null,"code":"var _jsxFileName = \"/home/atef/AlSair/atef/ITI/pullpush/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { React, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [is_first_time, setIsFirstTime] = useState(true);\n  const [messages, setMessages] = useState([]);\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    setInterval(() => {\n      let lastTime = 0;\n\n      if (messages.length > 0) {// lastTime=0\n        // Object.entries(messages[messages.length-1]).forEach(([key, value]) =>  lastTime=key )\n      } else lastTime = 0;\n\n      console.log(lastTime);\n      fetch('http://127.0.0.1:3012/messages/' + lastTime).then(response => response.json()).then(json => {\n        let mess = [];\n        Object.entries(json.messages).forEach(([key, value]) => mess.push({\n          key,\n          value\n        }));\n        setMessages(messages.concat(mess));\n        setCounter(counter + 1);\n      });\n    }, 1000); // eslint-disable-next-line\n  }, []);\n\n  const saveMessage = e => {\n    if (e.keyCode == 13) {\n      fetch('http://127.0.0.1:3012/messages', {\n        method: 'POST',\n        body: JSON.stringify({\n          message: message\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(response => response.json()).then(json => setMessage(\"\"));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyUp: saveMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => {\n        let msg = \"\";\n        let msgKey = \"\";\n        Object.entries(message).forEach(([key, value]) => {\n          msg = value; // console.log(key)\n        });\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, msg, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Pb6QnWUR8YWSrsR5XDXFqpRmUeM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/atef/AlSair/atef/ITI/pullpush/my-app/src/App.js"],"names":["React","useState","useEffect","App","message","setMessage","is_first_time","setIsFirstTime","messages","setMessages","counter","setCounter","setInterval","lastTime","length","console","log","fetch","then","response","json","mess","Object","entries","forEach","key","value","push","concat","saveMessage","e","keyCode","method","body","JSON","stringify","headers","target","map","msg","msgKey"],"mappings":"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","sourcesContent":["import './App.css';\nimport {React, useState, useEffect} from \"react\"\nfunction App() {\n    const [message , setMessage]=useState('')\n    const [is_first_time , setIsFirstTime]=useState(true)\n    const [messages , setMessages]=useState([])\n    const [counter , setCounter]=useState(0)\n\nuseEffect(()=>{\n        setInterval( ()=>{\n            let lastTime =0;\n            if (messages.length > 0)\n            {\n                // lastTime=0\n                // Object.entries(messages[messages.length-1]).forEach(([key, value]) =>  lastTime=key )\n            }\n            else\n                    lastTime=0\n            console.log(lastTime)\n            fetch('http://127.0.0.1:3012/messages/'+lastTime)\n                .then(response => response.json())\n                .then(json => {\n                    let mess = []\n                    Object.entries(json.messages).forEach(([key, value]) =>   mess.push({key,value}))\n                    setMessages(messages.concat(mess))\n                    setCounter(counter+1)\n                })\n        },1000)\n\n    // eslint-disable-next-line\n},[])\n    const saveMessage = (e)=>{\n        if(e.keyCode == 13){\n\n            fetch('http://127.0.0.1:3012/messages', {\n            method: 'POST',\n            body: JSON.stringify({\n                message: message,\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((json) => setMessage(\"\"));\n    }}\n  return (\n<>\n  <input type=\"text\" value={message} onChange={(e)=>setMessage(e.target.value)} onKeyUp={saveMessage}/>\n    <ul>\n        {\n            messages.map( (message) =>  {\n                let msg = \"\"\n                let msgKey = \"\"\n                Object.entries(message).forEach(([key, value]) =>{\n                    msg=value\n                    // console.log(key)\n                } )\n           return     <li key={msg} >{msg}</li> })\n        }\n    </ul>\n</>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
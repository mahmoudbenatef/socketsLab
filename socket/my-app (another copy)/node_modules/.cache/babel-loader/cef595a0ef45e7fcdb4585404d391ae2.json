{"ast":null,"code":"var _jsxFileName = \"/home/atef/AlSair/atef/ITI/pullpush/socket/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { React, useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css'; // const socket = io(\"http://127.0.0.1:5000\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://127.0.0.1:5001\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState(''); // const [message , setMessage]=useState('')\n\n  const [users, setUsers] = useState([]);\n  const socket = io(ENDPOINT); // solve set interval inside use effect\n\n  useEffect(() => {\n    socket.on(\"messageFromServer\", data => {\n      addResponseMessage(data);\n    });\n    socket.on(\"allUsers\", data => {\n      setUsers(data);\n    });\n    return () => {};\n  }, []);\n\n  const handleNewUserMessage = newMessage => {\n    socket.emit('message', newMessage);\n  };\n\n  const handleMessageToSpecificUser = newMessage => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user\n      }, user, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 31\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Widget, {\n      handleNewUserMessage: handleNewUserMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyUp: saveMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Widget, {\n      handleNewUserMessage: handleMessageToSpecificUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"xPj1P44DzaMh2caVRg6l7YblzN0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/atef/AlSair/atef/ITI/pullpush/socket/my-app/src/App.js"],"names":["React","useState","useEffect","io","Widget","addResponseMessage","ENDPOINT","App","message","setMessage","users","setUsers","socket","on","data","handleNewUserMessage","newMessage","emit","handleMessageToSpecificUser","map","user","e","target","value","saveMessage"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,MAAT,EAAgBC,kBAAhB,QAA0C,mBAA1C;AACA,OAAO,kCAAP,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAG,uBAAjB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,OAAD,EAAWC,UAAX,IAAuBR,QAAQ,CAAC,EAAD,CAArC,CADW,CAEX;;AACA,QAAM,CAACS,KAAD,EAASC,QAAT,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMW,MAAM,GAAGT,EAAE,CAACG,QAAD,CAAjB,CAJW,CAMX;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,MAAM,CAACC,EAAP,CAAU,mBAAV,EAA+BC,IAAI,IAAI;AACnCT,MAAAA,kBAAkB,CAACS,IAAD,CAAlB;AACH,KAFD;AAGIF,IAAAA,MAAM,CAACC,EAAP,CAAU,UAAV,EAAsBC,IAAI,IAAI;AAC1BH,MAAAA,QAAQ,CAACG,IAAD,CAAR;AACH,KAFD;AAGA,WAAS,MAAI,CACZ,CADD;AAEH,GATI,EAUL,EAVK,CAAT;;AAYA,QAAMC,oBAAoB,GAAIC,UAAD,IAAgB;AACzCJ,IAAAA,MAAM,CAACK,IAAP,CAAY,SAAZ,EAAsBD,UAAtB;AACH,GAFD;;AAIA,QAAME,2BAA2B,GAAGF,UAAD,IAAc,CAEhD,CAFD;;AAGF,sBACF;AAAA,4BACI;AAAA,gBAEQN,KAAK,CAACS,GAAN,CAAWC,IAAD,iBAAQ;AAAA,kBAAgBA;AAAhB,SAASA,IAAT;AAAA;AAAA;AAAA;AAAA,cAAlB;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,MAAD;AAAgB,MAAA,oBAAoB,EAAEL;AAAtC;AAAA;AAAA;AAAA;AAAA,YANJ,eASI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEP,OAA1B;AAAmC,MAAA,QAAQ,EAAGa,CAAD,IAAKZ,UAAU,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAA5D;AAA8E,MAAA,OAAO,EAAEC;AAAvF;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,MAAD;AAAgB,MAAA,oBAAoB,EAAEN;AAAtC;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,kBADE;AAgBD;;GA1CQX,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {React, useState, useEffect} from \"react\"\nimport { io } from \"socket.io-client\";\nimport { Widget,addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\n\n// const socket = io(\"http://127.0.0.1:5000\");\nconst ENDPOINT = \"http://127.0.0.1:5001\"\nfunction App() {\n    const [message , setMessage]=useState('')\n    // const [message , setMessage]=useState('')\n    const [users , setUsers]=useState([])\n    const socket = io(ENDPOINT);\n\n    // solve set interval inside use effect\n    useEffect(() => {\n        socket.on(\"messageFromServer\", data => {\n            addResponseMessage(data)\n        });\n            socket.on(\"allUsers\", data => {\n                setUsers(data)\n            });\n            return ( ()=>{\n            });\n        },\n        []\n    );\n    const handleNewUserMessage = (newMessage) => {\n        socket.emit('message',newMessage)\n    };\n\n    const handleMessageToSpecificUser =(newMessage)=>{\n\n    }\n  return (\n<>\n    <ul>\n        {\n            users.map((user)=><li key={user}>{user}</li>)\n        }\n    </ul>\n    <Widget         handleNewUserMessage={handleNewUserMessage} />\n\n\n    <input type=\"text\" value={message} onChange={(e)=>setMessage(e.target.value)} onKeyUp={saveMessage}/>\n    <Widget         handleNewUserMessage={handleMessageToSpecificUser} />\n\n\n    </>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
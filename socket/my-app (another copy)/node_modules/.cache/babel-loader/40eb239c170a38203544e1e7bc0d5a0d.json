{"ast":null,"code":"var _jsxFileName = \"/home/atef/AlSair/atef/ITI/pullpush/socket/my-app (another copy)/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { React, useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://127.0.0.1:5002\";\n\nfunction App() {\n  _s();\n\n  const [room, setRoom] = useState('');\n  const socket = io(ENDPOINT); // solve set interval inside use effect\n\n  useEffect(() => {\n    socket.on(\"messageFromServer\", data => {\n      console.log(\"here\");\n      addResponseMessage(data);\n    });\n    return () => {};\n  }, []);\n\n  const sendMessageToRoom = newMessage => {\n    socket.emit('messageToUser', [newMessage, room]);\n  };\n\n  const joinRoom = e => {\n    if (e.keyCode == 13) {\n      socket.emit('joinRoom', room);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Widget, {\n      handleNewUserMessage: sendMessageToRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: room,\n      onChange: e => setRoom(e.target.value),\n      onKeyUp: joinRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your room : \", room]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"FudpuGB13lzZYtDdBzp8GhDEFPA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/atef/AlSair/atef/ITI/pullpush/socket/my-app (another copy)/src/App.js"],"names":["React","useState","useEffect","io","Widget","addResponseMessage","ENDPOINT","App","room","setRoom","socket","on","data","console","log","sendMessageToRoom","newMessage","emit","joinRoom","e","keyCode","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,MAAT,EAAgBC,kBAAhB,QAA0C,mBAA1C;AACA,OAAO,kCAAP;;;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAiBR,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAMS,MAAM,GAAGP,EAAE,CAACG,QAAD,CAAjB,CAFW,CAIX;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,MAAM,CAACC,EAAP,CAAU,mBAAV,EAA+BC,IAAI,IAAI;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAT,MAAAA,kBAAkB,CAACO,IAAD,CAAlB;AACH,KAHD;AAIC,WAAS,MAAI,CACT,CADJ;AAEA,GAPI,EAQL,EARK,CAAT;;AAUA,QAAMG,iBAAiB,GAAIC,UAAD,IAAgB;AACtCN,IAAAA,MAAM,CAACO,IAAP,CAAY,eAAZ,EAA4B,CAACD,UAAD,EAAYR,IAAZ,CAA5B;AACH,GAFD;;AAGA,QAAMU,QAAQ,GAAIC,CAAD,IAAK;AAClB,QAAGA,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAmB;AACfV,MAAAA,MAAM,CAACO,IAAP,CAAY,UAAZ,EAAuBT,IAAvB;AACH;AAAC,GAHN;;AAKF,sBACF;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,oBAAoB,EAAEO;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEP,IAA1B;AAAgC,MAAA,QAAQ,EAAGW,CAAD,IAAKV,OAAO,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAAtD;AAAyE,MAAA,OAAO,EAAEJ;AAAlF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,iCAAiBV,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADE;AASD;;GAhCQD,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {React, useState, useEffect} from \"react\"\nimport { io } from \"socket.io-client\";\nimport { Widget,addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\n\nconst ENDPOINT = \"http://127.0.0.1:5002\"\nfunction App() {\n    const [room , setRoom]=useState('')\n    const socket = io(ENDPOINT);\n\n    // solve set interval inside use effect\n    useEffect(() => {\n        socket.on(\"messageFromServer\", data => {\n            console.log(\"here\")\n            addResponseMessage(data)\n        });\n         return ( ()=>{\n            });\n        },\n        []\n    );\n    const sendMessageToRoom = (newMessage) => {\n        socket.emit('messageToUser',[newMessage,room])\n    };\n    const joinRoom = (e)=>{\n        if(e.keyCode == 13){\n            socket.emit('joinRoom',room)\n        }}\n\n  return (\n<>\n    <Widget handleNewUserMessage={sendMessageToRoom} />\n    <input type=\"text\" value={room} onChange={(e)=>setRoom(e.target.value)}  onKeyUp={joinRoom} />\n    <h1>Your room : {room}</h1>\n\n\n    </>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
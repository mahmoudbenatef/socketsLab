{"ast":null,"code":"var _jsxFileName = \"/home/atef/AlSair/atef/ITI/pullpush/longTime/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { React, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState(''); // const [is_first_time , setIsFirstTime]=useState(true)\n\n  const [messages, setMessages] = useState([]); // const [counter , setCounter]=useState(0)\n  // solve set interval inside use effect\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:3012/messages/').then(response => response.json()).then(json => {\n      console.log(messages.concat(json.message));\n    }); // eslint-disable-next-line\n  }, []);\n\n  const saveMessage = e => {\n    if (e.keyCode == 13) {\n      fetch('http://127.0.0.1:3012/messages', {\n        method: 'POST',\n        body: JSON.stringify({\n          message: message\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(response => response.json()).then(json => setMessage(\"\"));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyUp: saveMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", {\n          message\n        }]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"g+O+FBe8pC9yBuappRyYsBntR4c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/atef/AlSair/atef/ITI/pullpush/longTime/my-app/src/App.js"],"names":["React","useState","useEffect","App","message","setMessage","messages","setMessages","fetch","then","response","json","console","log","concat","saveMessage","e","keyCode","method","body","JSON","stringify","headers","target","value","map"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,OAAD,EAAWC,UAAX,IAAuBJ,QAAQ,CAAC,EAAD,CAArC,CADW,CAEX;;AACA,QAAM,CAACK,QAAD,EAAYC,WAAZ,IAAyBN,QAAQ,CAAC,EAAD,CAAvC,CAHW,CAIX;AAEA;;AACJC,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACQ,MAAT,CAAgBH,IAAI,CAACP,OAArB,CAAZ;AACH,KAJL,EADU,CAMV;AACH,GAPQ,EAOP,EAPO,CAAT;;AAQI,QAAMW,WAAW,GAAIC,CAAD,IAAK;AACrB,QAAGA,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAmB;AACfT,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACxCU,QAAAA,MAAM,EAAE,MADgC;AAExCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBjB,UAAAA,OAAO,EAAEA;AADQ,SAAf,CAFkC;AAKxCkB,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAL+B,OAAnC,CAAL,CASCb,IATD,CASOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EATpB,EAUCF,IAVD,CAUOE,IAAD,IAAUN,UAAU,CAAC,EAAD,CAV1B;AAWP;AAAC,GAbF;;AAcF,sBACF;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAED,OAA1B;AAAmC,MAAA,QAAQ,EAAGY,CAAD,IAAKX,UAAU,CAACW,CAAC,CAACO,MAAF,CAASC,KAAV,CAA5D;AAA8E,MAAA,OAAO,EAAET;AAAvF;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAA,gBAEQT,QAAQ,CAACmB,GAAT,CAAerB,OAAD,iBAAa;AAAA,wBAAM;AAACA,UAAAA;AAAD,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3B;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADE;AAUD;;GAvCQD,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {React, useState, useEffect} from \"react\"\nfunction App() {\n    const [message , setMessage]=useState('')\n    // const [is_first_time , setIsFirstTime]=useState(true)\n    const [messages , setMessages]=useState([])\n    // const [counter , setCounter]=useState(0)\n\n    // solve set interval inside use effect\nuseEffect(()=>{\n    fetch('http://127.0.0.1:3012/messages/')\n        .then(response => response.json())\n        .then(json => {\n            console.log(messages.concat(json.message))\n        })\n    // eslint-disable-next-line\n},[])\n    const saveMessage = (e)=>{\n        if(e.keyCode == 13){\n            fetch('http://127.0.0.1:3012/messages', {\n            method: 'POST',\n            body: JSON.stringify({\n                message: message,\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((json) => setMessage(\"\"));\n    }}\n  return (\n<>\n  <input type=\"text\" value={message} onChange={(e)=>setMessage(e.target.value)} onKeyUp={saveMessage}/>\n    <ul>\n        {\n            messages.map( (message) => <li> {{message}}</li>  )\n        }\n    </ul>\n</>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
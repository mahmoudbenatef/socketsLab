{"ast":null,"code":"var _jsxFileName = \"/home/atef/AlSair/atef/ITI/pullpush/socket/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { React, useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { Widget } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css'; // const socket = io(\"http://127.0.0.1:5000\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://127.0.0.1:5000\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState(''); // const [is_first_time , setIsFirstTime]=useState(true)\n\n  const [messages, setMessages] = useState([]); // const [counter , setCounter]=useState(0)\n\n  const socket = io(ENDPOINT); // solve set interval inside use effect\n\n  useEffect(() => {\n    socket.on(\"FromOthers\", data => {\n      console.log(message);\n      setMessages(messages.concat(\"me :\" + message));\n    });\n    return () => {};\n  }, []);\n\n  const saveMessage = e => {\n    if (e.keyCode == 13) {\n      socket.emit('message', message);\n      setMessages(messages.concat(\"me :\" + message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Widget, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"g+O+FBe8pC9yBuappRyYsBntR4c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/atef/AlSair/atef/ITI/pullpush/socket/my-app/src/App.js"],"names":["React","useState","useEffect","io","Widget","ENDPOINT","App","message","setMessage","messages","setMessages","socket","on","data","console","log","concat","saveMessage","e","keyCode","emit"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,kCAAP,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAG,uBAAjB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,OAAD,EAAWC,UAAX,IAAuBP,QAAQ,CAAC,EAAD,CAArC,CADW,CAEX;;AACA,QAAM,CAACQ,QAAD,EAAYC,WAAZ,IAAyBT,QAAQ,CAAC,EAAD,CAAvC,CAHW,CAIX;;AACA,QAAMU,MAAM,GAAGR,EAAE,CAACE,QAAD,CAAjB,CALW,CAOX;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,MAAM,CAACC,EAAP,CAAU,YAAV,EAAwBC,IAAI,IAAI;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACAG,MAAAA,WAAW,CAACD,QAAQ,CAACO,MAAT,CAAgB,SAAOT,OAAvB,CAAD,CAAX;AACH,KAHD;AAKI,WAAS,MAAI,CACZ,CADD;AAEH,GARI,EASL,EATK,CAAT;;AAaA,QAAMU,WAAW,GAAIC,CAAD,IAAK;AACrB,QAAGA,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAmB;AACjBR,MAAAA,MAAM,CAACS,IAAP,CAAY,SAAZ,EAAsBb,OAAtB;AACEG,MAAAA,WAAW,CAACD,QAAQ,CAACO,MAAT,CAAgB,SAAOT,OAAvB,CAAD,CAAX;AACP;AAAC,GAJF;;AAKF,sBACF;AAAA,2BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ,mBADE;AAWD;;GArCQD,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {React, useState, useEffect} from \"react\"\nimport { io } from \"socket.io-client\";\nimport { Widget } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\n\n// const socket = io(\"http://127.0.0.1:5000\");\nconst ENDPOINT = \"http://127.0.0.1:5000\"\nfunction App() {\n    const [message , setMessage]=useState('')\n    // const [is_first_time , setIsFirstTime]=useState(true)\n    const [messages , setMessages]=useState([])\n    // const [counter , setCounter]=useState(0)\n    const socket = io(ENDPOINT);\n\n    // solve set interval inside use effect\n    useEffect(() => {\n        socket.on(\"FromOthers\", data => {\n            console.log(message)\n            setMessages(messages.concat(\"me :\"+message))\n        });\n\n            return ( ()=>{\n            });\n        },\n        []\n    );\n\n\n    const saveMessage = (e)=>{\n        if(e.keyCode == 13){\n          socket.emit('message',message)\n            setMessages(messages.concat(\"me :\"+message))\n    }}\n  return (\n<>\n    <Widget />\n    {/*<input type=\"text\" value={message} onChange={(e)=>setMessage(e.target.value)} onKeyUp={saveMessage}/>*/}\n  {/*  <ul>*/}\n  {/*      {*/}\n  {/*          messages.map(msg => <li key={msg} > {msg}</li>  )*/}\n  {/*      }*/}\n  {/*  </ul>*/}\n</>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
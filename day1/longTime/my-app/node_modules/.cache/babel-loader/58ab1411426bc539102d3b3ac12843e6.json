{"ast":null,"code":"var _jsxFileName = \"/home/atef/AlSair/atef/ITI/pullpush/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { React, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [is_first_time, setIsFirstTime] = useState(true);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    setInterval(() => {\n      let lastTime;\n      if (messages.length > 0) lastTime = 0; // Object.entries(messages[messages.length-1]).forEach(([key, value]) =>  lastTime=key )\n      else lastTime = 0;\n      fetch('http://127.0.0.1:3012/messages/' + lastTime).then(response => response.json()).then(json => {\n        let mess = messages; // Object.entries(json.messages).forEach(([key, value]) =>   mess.push({key,value}))\n\n        setMessages(mess.messages);\n      });\n    }, 1000); // eslint-disable-next-line\n  }, []);\n\n  const saveMessage = e => {\n    if (e.keyCode == 13) {\n      fetch('http://127.0.0.1:3012/messages', {\n        method: 'POST',\n        body: JSON.stringify({\n          message: message\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(response => response.json()).then(json => setMessage(\"\"));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyUp: saveMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => {\n        let msg = \"\";\n        let msgKey = \"\";\n        Object.entries(message).forEach(([key, value]) => {\n          msg = value; // console.log(key)\n        });\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, msg, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"3JImMHw7LG0HU5XkQdU7/BLB0PU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/atef/AlSair/atef/ITI/pullpush/my-app/src/App.js"],"names":["React","useState","useEffect","App","message","setMessage","is_first_time","setIsFirstTime","messages","setMessages","setInterval","lastTime","length","fetch","then","response","json","mess","saveMessage","e","keyCode","method","body","JSON","stringify","headers","target","value","map","msg","msgKey","Object","entries","forEach","key"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,OAAD,EAAWC,UAAX,IAAuBJ,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACK,aAAD,EAAiBC,cAAjB,IAAiCN,QAAQ,CAAC,IAAD,CAA/C;AACF,QAAM,CAACO,QAAD,EAAYC,WAAZ,IAAyBR,QAAQ,CAAC,EAAD,CAAvC;AAEFC,EAAAA,SAAS,CAAC,MAAI;AAENQ,IAAAA,WAAW,CAAE,MAAI;AACb,UAAIC,QAAJ;AACA,UAAIH,QAAQ,CAACI,MAAT,GAAkB,CAAtB,EACID,QAAQ,GAAG,CAAX,CADJ,CAEA;AAFA,WAIQA,QAAQ,GAAC,CAAT;AACRE,MAAAA,KAAK,CAAC,oCAAkCF,QAAnC,CAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV,YAAIC,IAAI,GAAGT,QAAX,CADU,CAEV;;AACAC,QAAAA,WAAW,CAACQ,IAAI,CAACT,QAAN,CAAX;AACH,OANL;AAOH,KAdU,EAcT,IAdS,CAAX,CAFM,CAkBV;AACH,GAnBQ,EAmBP,EAnBO,CAAT;;AAoBI,QAAMU,WAAW,GAAIC,CAAD,IAAK;AACrB,QAAGA,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAmB;AAEfP,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACxCQ,QAAAA,MAAM,EAAE,MADgC;AAExCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBpB,UAAAA,OAAO,EAAEA;AADQ,SAAf,CAFkC;AAKxCqB,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAL+B,OAAnC,CAAL,CASCX,IATD,CASOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EATpB,EAUCF,IAVD,CAUOE,IAAD,IAAUX,UAAU,CAAC,EAAD,CAV1B;AAWP;AAAC,GAdF;;AAeF,sBACF;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAED,OAA1B;AAAmC,MAAA,QAAQ,EAAGe,CAAD,IAAKd,UAAU,CAACc,CAAC,CAACO,MAAF,CAASC,KAAV,CAA5D;AAA8E,MAAA,OAAO,EAAET;AAAvF;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAA,gBAEQV,QAAQ,CAACoB,GAAT,CAAexB,OAAD,IAAc;AACxB,YAAIyB,GAAG,GAAG,EAAV;AACA,YAAIC,MAAM,GAAG,EAAb;AACAC,QAAAA,MAAM,CAACC,OAAP,CAAe5B,OAAf,EAAwB6B,OAAxB,CAAgC,CAAC,CAACC,GAAD,EAAMP,KAAN,CAAD,KAAiB;AAC7CE,UAAAA,GAAG,GAACF,KAAJ,CAD6C,CAE7C;AACH,SAHD;AAIL,4BAAW;AAAA,oBAAgBE;AAAhB,WAASA,GAAT;AAAA;AAAA;AAAA;AAAA,gBAAX;AAAsC,OAPrC;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADE;AAiBD;;GAzDQ1B,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {React, useState, useEffect} from \"react\"\nfunction App() {\n    const [message , setMessage]=useState('')\n    const [is_first_time , setIsFirstTime]=useState(true)\n  const [messages , setMessages]=useState([])\n\nuseEffect(()=>{\n\n        setInterval( ()=>{\n            let lastTime ;\n            if (messages.length > 0)\n                lastTime = 0\n            // Object.entries(messages[messages.length-1]).forEach(([key, value]) =>  lastTime=key )\n                else\n                    lastTime=0\n            fetch('http://127.0.0.1:3012/messages/'+lastTime)\n                .then(response => response.json())\n                .then(json => {\n                    let mess = messages\n                    // Object.entries(json.messages).forEach(([key, value]) =>   mess.push({key,value}))\n                    setMessages(mess.messages)\n                })\n        },1000)\n\n    // eslint-disable-next-line\n},[])\n    const saveMessage = (e)=>{\n        if(e.keyCode == 13){\n\n            fetch('http://127.0.0.1:3012/messages', {\n            method: 'POST',\n            body: JSON.stringify({\n                message: message,\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((json) => setMessage(\"\"));\n    }}\n  return (\n<>\n  <input type=\"text\" value={message} onChange={(e)=>setMessage(e.target.value)} onKeyUp={saveMessage}/>\n    <ul>\n        {\n            messages.map( (message) =>  {\n                let msg = \"\"\n                let msgKey = \"\"\n                Object.entries(message).forEach(([key, value]) =>{\n                    msg=value\n                    // console.log(key)\n                } )\n           return     <li key={msg} >{msg}</li> })\n        }\n    </ul>\n</>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
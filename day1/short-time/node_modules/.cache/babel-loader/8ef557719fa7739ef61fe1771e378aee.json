{"ast":null,"code":"var _jsxFileName = \"/home/atef/AlSair/atef/ITI/pullpush/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { React, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      console.log(messages);\n      let lastTime = 0;\n\n      if (messages.length > 0) {\n        lastTime = messages[messages.length - 1][\"time\"];\n      }\n\n      fetch('http://127.0.0.1:3012/messages/' + lastTime).then(response => response.json()).then(json => {\n        setMessages(messages.concat(json.messages));\n      });\n    }, 1000);\n    return () => {\n      window.clearInterval(timer);\n    };\n  }, [messages]);\n\n  const saveMessage = e => {\n    if (e.keyCode == 13) {\n      fetch('http://127.0.0.1:3012/messages', {\n        method: 'POST',\n        body: JSON.stringify({\n          message: message\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(response => response.json()).then(json => setMessage(\"\"));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyUp: saveMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => {\n        let msg = \"\";\n        let msgKey = \"\";\n        Object.entries(message).forEach(([key, value]) => {\n          msg = value; // console.log(key)\n        });\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, msg, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"g+O+FBe8pC9yBuappRyYsBntR4c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/atef/AlSair/atef/ITI/pullpush/my-app/src/App.js"],"names":["React","useState","useEffect","App","message","setMessage","messages","setMessages","timer","window","setInterval","console","log","lastTime","length","fetch","then","response","json","concat","clearInterval","saveMessage","e","keyCode","method","body","JSON","stringify","headers","target","value","map","msg","msgKey","Object","entries","forEach","key"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,OAAD,EAAWC,UAAX,IAAuBJ,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACK,QAAD,EAAYC,WAAZ,IAAyBN,QAAQ,CAAC,EAAD,CAAvC;AACJC,EAAAA,SAAS,CAAC,MAAI;AACP,UAAMM,KAAK,GAAGC,MAAM,CAACC,WAAP,CAAoB,MAAI;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACH,UAAIO,QAAQ,GAAE,CAAd;;AACA,UAAIP,QAAQ,CAACQ,MAAT,GAAkB,CAAtB,EACA;AACID,QAAAA,QAAQ,GAAKP,QAAQ,CAACA,QAAQ,CAACQ,MAAT,GAAgB,CAAjB,CAAT,CAA8B,MAA9B,CAAZ;AACH;;AACDC,MAAAA,KAAK,CAAC,oCAAkCF,QAAnC,CAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACVX,QAAAA,WAAW,CAACD,QAAQ,CAACa,MAAT,CAAgBD,IAAI,CAACZ,QAArB,CAAD,CAAX;AACH,OAJL;AAKH,KAZY,EAaT,IAbS,CAAd;AAcH,WAAO,MAAM;AACTG,MAAAA,MAAM,CAACW,aAAP,CAAqBZ,KAArB;AACH,KAFD;AAGH,GAlBQ,EAkBP,CAACF,QAAD,CAlBO,CAAT;;AAmBI,QAAMe,WAAW,GAAIC,CAAD,IAAK;AACrB,QAAGA,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAmB;AACfR,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACxCS,QAAAA,MAAM,EAAE,MADgC;AAExCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBvB,UAAAA,OAAO,EAAEA;AADQ,SAAf,CAFkC;AAKxCwB,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAL+B,OAAnC,CAAL,CASCZ,IATD,CASOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EATpB,EAUCF,IAVD,CAUOE,IAAD,IAAUb,UAAU,CAAC,EAAD,CAV1B;AAWP;AAAC,GAbF;;AAcF,sBACF;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAED,OAA1B;AAAmC,MAAA,QAAQ,EAAGkB,CAAD,IAAKjB,UAAU,CAACiB,CAAC,CAACO,MAAF,CAASC,KAAV,CAA5D;AAA8E,MAAA,OAAO,EAAET;AAAvF;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAA,gBAEQf,QAAQ,CAACyB,GAAT,CAAe3B,OAAD,IAAc;AACxB,YAAI4B,GAAG,GAAG,EAAV;AACA,YAAIC,MAAM,GAAG,EAAb;AACAC,QAAAA,MAAM,CAACC,OAAP,CAAe/B,OAAf,EAAwBgC,OAAxB,CAAgC,CAAC,CAACC,GAAD,EAAMP,KAAN,CAAD,KAAiB;AAC7CE,UAAAA,GAAG,GAACF,KAAJ,CAD6C,CAE7C;AACH,SAHD;AAIL,4BAAW;AAAA,oBAAgBE;AAAhB,WAASA,GAAT;AAAA;AAAA;AAAA;AAAA,gBAAX;AAAsC,OAPrC;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADE;AAiBD;;GArDQ7B,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {React, useState, useEffect} from \"react\"\nfunction App() {\n    const [message , setMessage]=useState('')\n    const [messages , setMessages]=useState([])\nuseEffect(()=>{\n       const timer = window.setInterval( ()=>{\n               console.log(messages)\n            let lastTime =0;\n            if (messages.length > 0)\n            {\n                lastTime = ((messages[messages.length-1])[\"time\"])\n            }\n            fetch('http://127.0.0.1:3012/messages/'+lastTime)\n                .then(response => response.json())\n                .then(json => {\n                    setMessages(messages.concat(json.messages))\n                })\n        },\n            1000)\n    return () => {\n        window.clearInterval(timer);\n    };\n},[messages])\n    const saveMessage = (e)=>{\n        if(e.keyCode == 13){\n            fetch('http://127.0.0.1:3012/messages', {\n            method: 'POST',\n            body: JSON.stringify({\n                message: message,\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((json) => setMessage(\"\"));\n    }}\n  return (\n<>\n  <input type=\"text\" value={message} onChange={(e)=>setMessage(e.target.value)} onKeyUp={saveMessage}/>\n    <ul>\n        {\n            messages.map( (message) =>  {\n                let msg = \"\"\n                let msgKey = \"\"\n                Object.entries(message).forEach(([key, value]) =>{\n                    msg=value\n                    // console.log(key)\n                } )\n           return     <li key={msg} >{msg}</li> })\n        }\n    </ul>\n</>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/atef/AlSair/atef/ITI/pullpush/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { React, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState(''); // const [is_first_time , setIsFirstTime]=useState(true)\n\n  const [messages, setMessages] = useState([]); // const [counter , setCounter]=useState(0)\n  // solve set interval inside use effect\n\n  useEffect(() => {\n    let allmessages = [];\n    const timer = window.setInterval(() => {\n      let lastTime = 0;\n\n      if (allmessages.length > 0) {\n        lastTime = allmessages[allmessages.length - 1][\"key\"];\n      } // console.log(lastTime)\n      // console.log(allmessages)\n\n\n      fetch('http://127.0.0.1:3012/messages/' + lastTime).then(response => response.json()).then(json => {\n        console.log(json);\n        let mess = [];\n        Object.entries(json.messages).forEach(([key, value]) => mess.push({\n          key,\n          value\n        }));\n        allmessages = allmessages.concat(mess);\n        setMessages(allmessages);\n      });\n    }, 1000);\n    return () => {\n      window.clearInterval(timer);\n    }; // eslint-disable-next-line\n  }, []);\n\n  const saveMessage = e => {\n    if (e.keyCode == 13) {\n      fetch('http://127.0.0.1:3012/messages', {\n        method: 'POST',\n        body: JSON.stringify({\n          message: message\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(response => response.json()).then(json => setMessage(\"\"));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyUp: saveMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => {\n        let msg = \"\";\n        let msgKey = \"\";\n        Object.entries(message).forEach(([key, value]) => {\n          msg = value; // console.log(key)\n        });\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, msg, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"g+O+FBe8pC9yBuappRyYsBntR4c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/atef/AlSair/atef/ITI/pullpush/my-app/src/App.js"],"names":["React","useState","useEffect","App","message","setMessage","messages","setMessages","allmessages","timer","window","setInterval","lastTime","length","fetch","then","response","json","console","log","mess","Object","entries","forEach","key","value","push","concat","clearInterval","saveMessage","e","keyCode","method","body","JSON","stringify","headers","target","map","msg","msgKey"],"mappings":"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","sourcesContent":["import './App.css';\nimport {React, useState, useEffect} from \"react\"\nfunction App() {\n    const [message , setMessage]=useState('')\n    // const [is_first_time , setIsFirstTime]=useState(true)\n    const [messages , setMessages]=useState([])\n    // const [counter , setCounter]=useState(0)\n\n    // solve set interval inside use effect\nuseEffect(()=>{\n    let allmessages=[];\n       const timer = window.setInterval( ()=>{\n            let lastTime =0;\n            if (allmessages.length > 0)\n            {\n                lastTime = ((allmessages[allmessages.length-1])[\"key\"])\n            }\n            // console.log(lastTime)\n            // console.log(allmessages)\n            fetch('http://127.0.0.1:3012/messages/'+lastTime)\n                .then(response => response.json())\n                .then(json => {\n                    console.log(json)\n                    let mess = []\n                    Object.entries(json.messages).forEach(([key, value]) =>   mess.push({key,value}))\n                    allmessages=allmessages.concat(mess)\n                    setMessages(allmessages)\n                })\n        },\n            1000)\n    return () => {\n        window.clearInterval(timer);\n    };\n    // eslint-disable-next-line\n},[])\n    const saveMessage = (e)=>{\n        if(e.keyCode == 13){\n            fetch('http://127.0.0.1:3012/messages', {\n            method: 'POST',\n            body: JSON.stringify({\n                message: message,\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((json) => setMessage(\"\"));\n    }}\n  return (\n<>\n  <input type=\"text\" value={message} onChange={(e)=>setMessage(e.target.value)} onKeyUp={saveMessage}/>\n    <ul>\n        {\n            messages.map( (message) =>  {\n                let msg = \"\"\n                let msgKey = \"\"\n                Object.entries(message).forEach(([key, value]) =>{\n                    msg=value\n                    // console.log(key)\n                } )\n           return     <li key={msg} >{msg}</li> })\n        }\n    </ul>\n</>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}